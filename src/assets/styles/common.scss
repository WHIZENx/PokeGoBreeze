// Mixins for common styles
@mixin theme-transition($transition: 0.3s) {
  transition: background-color $transition, color $transition, border-color $transition;
}

@mixin theme-background($color: var(--background-paper), $important: false) {
  @if $important {
    background-color: $color !important;
  } @else {
    background-color: $color;
  }
}

@mixin theme-text($color: var(--text-primary), $important: false) {
  @if $important {
    color: $color !important;
  } @else {
    color: $color;
  }
}

@mixin theme-border($width: 1px, $direction: all, $color: var(--custom-table-background-sub-head-border), $important: false) {
  @if $direction == all {
    @if $important {
      border: $width solid $color !important;
    } @else {
      border: $width solid $color;
    }
  }

  @if $direction == top {
    @if $important {
      border-top: $width solid $color !important;
    } @else {
      border-top: $width solid $color;
    }
  }

  @if $direction == right {
    @if $important {
      border-right: $width solid $color !important;
    } @else {
      border-right: $width solid $color;
    }
  }

  @if $direction == bottom {
    @if $important {
      border-bottom: $width solid $color !important;
    } @else {
      border-bottom: $width solid $color;
    }
  }

  @if $direction == left {
    @if $important {
      border-left: $width solid $color !important;
    } @else {
      border-left: $width solid $color;
    }
  }
}

@mixin table-head-style {
  @include theme-transition;
  @apply tw-bg-table-head tw-text-white;
}

@mixin sub-head-style {
  @include theme-background(var(--custom-table-background-sub-head), true);
  @include theme-text(var(--custom-table-background-sub-head-text), true);
  @include theme-border;
}

@mixin table-info-style {
  @include theme-background(var(--table-info));
  @include theme-text(var(--custom-table-background-sub-head-text));
  @include theme-border;
}

@mixin hover-effect {
  &:hover,
  .ranking-container .accordion-button.collapsed:hover {
    @include theme-background(var(--custom-selected-hover));
  }
}

@mixin standard-border {
  @include theme-border(1px, all, var(--custom-table-border));
}

@mixin hover-border {
  @include theme-border(1px, all, var(--custom-gray), true);
}

@mixin bs-border-sides {
  @include theme-border(1px, left, var(--border-color));
  @include theme-border(1px, right, var(--border-color));
}

@mixin thick-standard-border {
  @include theme-border(2px, all, var(--custom-table-border));
}

@mixin info-table-style($important: false) {
  @include theme-text(var(--text-primary));
  @include theme-background(var(--table-info), $important);
}

@mixin default-text-shadow($width: 1px, $color: var(--shadow-default)) {
  text-shadow: $color $width $width;
  -webkit-text-shadow: $color $width $width;
  -moz-text-shadow: $color $width $width;
  -o-text-shadow: $color $width $width;
  -ms-text-shadow: $color $width $width;
}

@mixin default-shadow($gray-scale: none, $width: 1px, $color: var(--shadow-default)) {
  $drop-shadow: drop-shadow($width $width $width $color);

  @if $gray-scale == none {
    filter: $drop-shadow;
    -webkit-filter: $drop-shadow;
    -moz-filter: $drop-shadow;
    -o-filter: $drop-shadow;
    -ms-filter: $drop-shadow;
  } @else {
    filter: $drop-shadow grayscale($gray-scale);
    -webkit-filter: $drop-shadow grayscale($gray-scale);
    -moz-filter: $drop-shadow grayscale($gray-scale);
    -o-filter: $drop-shadow grayscale($gray-scale);
    -ms-filter: $drop-shadow grayscale($gray-scale);
  }
}

@mixin filter-gray($gray-scale: 100%) {
  filter: grayscale($gray-scale);
  -webkit-filter: grayscale($gray-scale);
  -moz-filter: grayscale($gray-scale);
  -o-filter: grayscale($gray-scale);
  -ms-filter: grayscale($gray-scale);
}

@mixin filter-base($invert: 88%, $sepia: 36%, $saturate: 644%, $hue: 6deg, $brightness: 108%, $contrast: 105%) {
  $base-filter: invert($invert) sepia($sepia) saturate($saturate) hue-rotate($hue) brightness($brightness) contrast($contrast);
  
  filter: $base-filter;
  -webkit-filter: $base-filter;
  -moz-filter: $base-filter;
  -o-filter: $base-filter;
  -ms-filter: $base-filter;
}

@mixin filter($drop-shadow: none, $invert: 88%, $sepia: 36%, $saturate: 644%, $hue: 6deg, $brightness: 108%, $contrast: 105%) {
  $base-filter: brightness(0) saturate(100%) invert($invert) sepia($sepia) saturate($saturate) hue-rotate($hue) brightness($brightness) contrast($contrast);
  
  @if $drop-shadow == none {
    filter: $base-filter;
    -webkit-filter: $base-filter;
    -moz-filter: $base-filter;
    -o-filter: $base-filter;
    -ms-filter: $base-filter;
  } @else {
    filter: $base-filter drop-shadow($drop-shadow);
    -webkit-filter: $base-filter drop-shadow($drop-shadow);
    -moz-filter: $base-filter drop-shadow($drop-shadow);
    -o-filter: $base-filter drop-shadow($drop-shadow);
    -ms-filter: $base-filter drop-shadow($drop-shadow);
  }
}

@mixin filter-blue($width: 1px) {
  filter: blur($width);
  -webkit-filter: blur($width);
  -moz-filter: blur($width);
  -o-filter: blur($width);
  -ms-filter: blur($width);
}

@mixin thin-border($side: right, $color: var(--custom-light-gray)) {
  @include theme-border(0.5px, $side, $color);
}

@mixin border-with-side($side) {
  @include theme-border(1px, $side, var(--border-color));
}

@mixin black-hover-border {
  @include theme-border(1px, all, var(--default), true);
}
